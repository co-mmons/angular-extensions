{"version":3,"file":"commons-angular-extensions-forms.js","sources":["ng://@co.mmons/angular-extensions/forms/update-value-and-validity.ts","ng://@co.mmons/angular-extensions/forms/commons-angular-extensions-forms.ts"],"sourcesContent":["import {AbstractControl, FormArray, FormGroup} from \"@angular/forms\";\n\nexport function updateValueAndValidity(controlOrControls: AbstractControl | AbstractControl[] | {[control: string]: AbstractControl}, opts?: {onlySelf?: boolean; emitEvent?: boolean; ommit?: AbstractControl[]}) {\n\n    let controls: AbstractControl[];\n\n    if (Array.isArray(controlOrControls)) {\n        controls = controlOrControls;\n    } else if (controlOrControls instanceof AbstractControl) {\n        controls = [controlOrControls];\n    } else if (controlOrControls) {\n        controls = [];\n        for (const k of Object.keys(controlOrControls)) {\n            if (controlOrControls[k]) {\n                controls.push(controlOrControls[k]);\n            }\n        }\n    }\n\n    CONTROLS: for (const control of controls) {\n\n        if (!control) {\n            continue;\n        }\n\n        if (opts && opts.ommit) {\n            for (const c of opts.ommit) {\n                if (c === control) {\n                    continue CONTROLS;\n                }\n            }\n        }\n\n        if (!opts || !opts.onlySelf) {\n            if (control instanceof FormGroup) {\n                const group = (control as FormGroup);\n\n                for (const field in group.controls) {\n                    updateValueAndValidity(group.controls[field], opts);\n                }\n\n            } else if (control instanceof FormArray) {\n                const group = (control as FormArray);\n\n                for (const field in group.controls) {\n                    const c = group.controls[field];\n                    updateValueAndValidity(group.controls[field], opts);\n                }\n            }\n        }\n\n        control.updateValueAndValidity(opts);\n    }\n}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":["tslib_1.__values"],"mappings":";;;SAEgB,sBAAsB,CAAC,iBAA6F,EAAE,IAA2E;;IAE7M,IAAI,QAA2B,CAAC;IAEhC,IAAI,KAAK,CAAC,OAAO,CAAC,iBAAiB,CAAC,EAAE;QAClC,QAAQ,GAAG,iBAAiB,CAAC;KAChC;SAAM,IAAI,iBAAiB,YAAY,eAAe,EAAE;QACrD,QAAQ,GAAG,CAAC,iBAAiB,CAAC,CAAC;KAClC;SAAM,IAAI,iBAAiB,EAAE;QAC1B,QAAQ,GAAG,EAAE,CAAC;;YACd,KAAgB,IAAA,KAAAA,SAAA,MAAM,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAA,gBAAA,4BAAE;gBAA3C,IAAM,CAAC,WAAA;gBACR,IAAI,iBAAiB,CAAC,CAAC,CAAC,EAAE;oBACtB,QAAQ,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC,CAAC,CAAC;iBACvC;aACJ;;;;;;;;;KACJ;;QAED,QAAQ,EAAE,KAAsB,IAAA,aAAAA,SAAA,QAAQ,CAAA,kCAAA,wDAAE;YAA3B,IAAM,OAAO,qBAAA;YAExB,IAAI,CAAC,OAAO,EAAE;gBACV,SAAS;aACZ;YAED,IAAI,IAAI,IAAI,IAAI,CAAC,KAAK,EAAE;;oBACpB,KAAgB,IAAA,KAAAA,SAAA,IAAI,CAAC,KAAK,CAAA,gBAAA,4BAAE;wBAAvB,IAAM,CAAC,WAAA;wBACR,IAAI,CAAC,KAAK,OAAO,EAAE;4BACf,SAAS,QAAQ,CAAC;yBACrB;qBACJ;;;;;;;;;aACJ;YAED,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBACzB,IAAI,OAAO,YAAY,SAAS,EAAE;oBAC9B,IAAM,KAAK,GAAI,OAAqB,CAAC;oBAErC,KAAK,IAAM,KAAK,IAAI,KAAK,CAAC,QAAQ,EAAE;wBAChC,sBAAsB,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC;qBACvD;iBAEJ;qBAAM,IAAI,OAAO,YAAY,SAAS,EAAE;oBACrC,IAAM,KAAK,GAAI,OAAqB,CAAC;oBAErC,KAAK,IAAM,KAAK,IAAI,KAAK,CAAC,QAAQ,EAAE;wBAChC,IAAM,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;wBAChC,sBAAsB,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,IAAI,CAAC,CAAC;qBACvD;iBACJ;aACJ;YAED,OAAO,CAAC,sBAAsB,CAAC,IAAI,CAAC,CAAC;SACxC;;;;;;;;;CACJ;;ACrDD;;GAEG;;;;"}