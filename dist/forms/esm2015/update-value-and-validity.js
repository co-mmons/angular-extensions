import { AbstractControl, FormArray, FormGroup } from "@angular/forms";
export function updateValueAndValidity(controlOrControls, opts) {
    let controls;
    if (Array.isArray(controlOrControls)) {
        controls = controlOrControls;
    }
    else if (controlOrControls instanceof AbstractControl) {
        controls = [controlOrControls];
    }
    else if (controlOrControls) {
        controls = [];
        for (const k of Object.keys(controlOrControls)) {
            if (controlOrControls[k]) {
                controls.push(controlOrControls[k]);
            }
        }
    }
    CONTROLS: for (const control of controls) {
        if (!control) {
            continue;
        }
        if (opts && opts.ommit) {
            for (const c of opts.ommit) {
                if (c === control) {
                    continue CONTROLS;
                }
            }
        }
        if (!opts || !opts.onlySelf) {
            if (control instanceof FormGroup) {
                const group = control;
                for (const field in group.controls) {
                    updateValueAndValidity(group.controls[field], opts);
                }
            }
            else if (control instanceof FormArray) {
                const group = control;
                for (const field in group.controls) {
                    const c = group.controls[field];
                    updateValueAndValidity(group.controls[field], opts);
                }
            }
        }
        control.updateValueAndValidity(opts);
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidXBkYXRlLXZhbHVlLWFuZC12YWxpZGl0eS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0Bjby5tbW9ucy9hbmd1bGFyLWV4dGVuc2lvbnMvZm9ybXMvIiwic291cmNlcyI6WyJ1cGRhdGUtdmFsdWUtYW5kLXZhbGlkaXR5LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBQyxlQUFlLEVBQUUsU0FBUyxFQUFFLFNBQVMsRUFBQyxNQUFNLGdCQUFnQixDQUFDO0FBRXJFLE1BQU0sVUFBVSxzQkFBc0IsQ0FBQyxpQkFBNkYsRUFBRSxJQUEyRTtJQUU3TSxJQUFJLFFBQTJCLENBQUM7SUFFaEMsSUFBSSxLQUFLLENBQUMsT0FBTyxDQUFDLGlCQUFpQixDQUFDLEVBQUU7UUFDbEMsUUFBUSxHQUFHLGlCQUFpQixDQUFDO0tBQ2hDO1NBQU0sSUFBSSxpQkFBaUIsWUFBWSxlQUFlLEVBQUU7UUFDckQsUUFBUSxHQUFHLENBQUMsaUJBQWlCLENBQUMsQ0FBQztLQUNsQztTQUFNLElBQUksaUJBQWlCLEVBQUU7UUFDMUIsUUFBUSxHQUFHLEVBQUUsQ0FBQztRQUNkLEtBQUssTUFBTSxDQUFDLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsQ0FBQyxFQUFFO1lBQzVDLElBQUksaUJBQWlCLENBQUMsQ0FBQyxDQUFDLEVBQUU7Z0JBQ3RCLFFBQVEsQ0FBQyxJQUFJLENBQUMsaUJBQWlCLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQzthQUN2QztTQUNKO0tBQ0o7SUFFRCxRQUFRLEVBQUUsS0FBSyxNQUFNLE9BQU8sSUFBSSxRQUFRLEVBQUU7UUFFdEMsSUFBSSxDQUFDLE9BQU8sRUFBRTtZQUNWLFNBQVM7U0FDWjtRQUVELElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDcEIsS0FBSyxNQUFNLENBQUMsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO2dCQUN4QixJQUFJLENBQUMsS0FBSyxPQUFPLEVBQUU7b0JBQ2YsU0FBUyxRQUFRLENBQUM7aUJBQ3JCO2FBQ0o7U0FDSjtRQUVELElBQUksQ0FBQyxJQUFJLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ3pCLElBQUksT0FBTyxZQUFZLFNBQVMsRUFBRTtnQkFDOUIsTUFBTSxLQUFLLEdBQUksT0FBcUIsQ0FBQztnQkFFckMsS0FBSyxNQUFNLEtBQUssSUFBSSxLQUFLLENBQUMsUUFBUSxFQUFFO29CQUNoQyxzQkFBc0IsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO2lCQUN2RDthQUVKO2lCQUFNLElBQUksT0FBTyxZQUFZLFNBQVMsRUFBRTtnQkFDckMsTUFBTSxLQUFLLEdBQUksT0FBcUIsQ0FBQztnQkFFckMsS0FBSyxNQUFNLEtBQUssSUFBSSxLQUFLLENBQUMsUUFBUSxFQUFFO29CQUNoQyxNQUFNLENBQUMsR0FBRyxLQUFLLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxDQUFDO29CQUNoQyxzQkFBc0IsQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFDLEtBQUssQ0FBQyxFQUFFLElBQUksQ0FBQyxDQUFDO2lCQUN2RDthQUNKO1NBQ0o7UUFFRCxPQUFPLENBQUMsc0JBQXNCLENBQUMsSUFBSSxDQUFDLENBQUM7S0FDeEM7QUFDTCxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtBYnN0cmFjdENvbnRyb2wsIEZvcm1BcnJheSwgRm9ybUdyb3VwfSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcblxuZXhwb3J0IGZ1bmN0aW9uIHVwZGF0ZVZhbHVlQW5kVmFsaWRpdHkoY29udHJvbE9yQ29udHJvbHM6IEFic3RyYWN0Q29udHJvbCB8IEFic3RyYWN0Q29udHJvbFtdIHwge1tjb250cm9sOiBzdHJpbmddOiBBYnN0cmFjdENvbnRyb2x9LCBvcHRzPzoge29ubHlTZWxmPzogYm9vbGVhbjsgZW1pdEV2ZW50PzogYm9vbGVhbjsgb21taXQ/OiBBYnN0cmFjdENvbnRyb2xbXX0pIHtcblxuICAgIGxldCBjb250cm9sczogQWJzdHJhY3RDb250cm9sW107XG5cbiAgICBpZiAoQXJyYXkuaXNBcnJheShjb250cm9sT3JDb250cm9scykpIHtcbiAgICAgICAgY29udHJvbHMgPSBjb250cm9sT3JDb250cm9scztcbiAgICB9IGVsc2UgaWYgKGNvbnRyb2xPckNvbnRyb2xzIGluc3RhbmNlb2YgQWJzdHJhY3RDb250cm9sKSB7XG4gICAgICAgIGNvbnRyb2xzID0gW2NvbnRyb2xPckNvbnRyb2xzXTtcbiAgICB9IGVsc2UgaWYgKGNvbnRyb2xPckNvbnRyb2xzKSB7XG4gICAgICAgIGNvbnRyb2xzID0gW107XG4gICAgICAgIGZvciAoY29uc3QgayBvZiBPYmplY3Qua2V5cyhjb250cm9sT3JDb250cm9scykpIHtcbiAgICAgICAgICAgIGlmIChjb250cm9sT3JDb250cm9sc1trXSkge1xuICAgICAgICAgICAgICAgIGNvbnRyb2xzLnB1c2goY29udHJvbE9yQ29udHJvbHNba10pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgfVxuXG4gICAgQ09OVFJPTFM6IGZvciAoY29uc3QgY29udHJvbCBvZiBjb250cm9scykge1xuXG4gICAgICAgIGlmICghY29udHJvbCkge1xuICAgICAgICAgICAgY29udGludWU7XG4gICAgICAgIH1cblxuICAgICAgICBpZiAob3B0cyAmJiBvcHRzLm9tbWl0KSB7XG4gICAgICAgICAgICBmb3IgKGNvbnN0IGMgb2Ygb3B0cy5vbW1pdCkge1xuICAgICAgICAgICAgICAgIGlmIChjID09PSBjb250cm9sKSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlIENPTlRST0xTO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGlmICghb3B0cyB8fCAhb3B0cy5vbmx5U2VsZikge1xuICAgICAgICAgICAgaWYgKGNvbnRyb2wgaW5zdGFuY2VvZiBGb3JtR3JvdXApIHtcbiAgICAgICAgICAgICAgICBjb25zdCBncm91cCA9IChjb250cm9sIGFzIEZvcm1Hcm91cCk7XG5cbiAgICAgICAgICAgICAgICBmb3IgKGNvbnN0IGZpZWxkIGluIGdyb3VwLmNvbnRyb2xzKSB7XG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZVZhbHVlQW5kVmFsaWRpdHkoZ3JvdXAuY29udHJvbHNbZmllbGRdLCBvcHRzKTtcbiAgICAgICAgICAgICAgICB9XG5cbiAgICAgICAgICAgIH0gZWxzZSBpZiAoY29udHJvbCBpbnN0YW5jZW9mIEZvcm1BcnJheSkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGdyb3VwID0gKGNvbnRyb2wgYXMgRm9ybUFycmF5KTtcblxuICAgICAgICAgICAgICAgIGZvciAoY29uc3QgZmllbGQgaW4gZ3JvdXAuY29udHJvbHMpIHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgYyA9IGdyb3VwLmNvbnRyb2xzW2ZpZWxkXTtcbiAgICAgICAgICAgICAgICAgICAgdXBkYXRlVmFsdWVBbmRWYWxpZGl0eShncm91cC5jb250cm9sc1tmaWVsZF0sIG9wdHMpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuXG4gICAgICAgIGNvbnRyb2wudXBkYXRlVmFsdWVBbmRWYWxpZGl0eShvcHRzKTtcbiAgICB9XG59XG4iXX0=