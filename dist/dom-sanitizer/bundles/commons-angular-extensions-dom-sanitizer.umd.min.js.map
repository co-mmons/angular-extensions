{"version":3,"sources":["../../../src/dom-sanitizer/safe-html-pipe.ts","../../../src/dom-sanitizer/safe-style-pipe.ts","../../../src/dom-sanitizer/safe-style-url-pipe.ts","../../../src/dom-sanitizer/safe-url-pipe.ts","../../../src/dom-sanitizer/index.ts"],"names":["SafeHtmlPipe","sanitizer","this","prototype","transform","key","bypassSecurityTrustHtml","Pipe","args","name","DomSanitizer","SafeStylePipe","style","bypassSecurityTrustStyle","SafeStyleUrlPipe","url","SafeUrlPipe","bypassSecurityTrustUrl","NgModule","declarations","exports"],"mappings":"klBAQI,SAAAA,EAAoBC,GAAAC,KAAAD,UAAAA,SAGpBD,EAAAG,UAAAC,UAAA,SAAUC,GACN,OAAOH,KAAKD,UAAUK,wBAAwBD,6BATrDE,EAAAA,KAAIC,KAAA,CAAC,CACFC,KAAM,wDAHFC,EAAAA,iCCOJ,SAAAC,EAAoBV,GAAAC,KAAAD,UAAAA,SAGpBU,EAAAR,UAAAC,UAAA,SAAUQ,GACN,OAAOV,KAAKD,UAAUY,yBAAyBD,6BATtDL,EAAAA,KAAIC,KAAA,CAAC,CACFC,KAAM,yDAHFC,EAAAA,iCCOJ,SAAAI,EAAoBb,GAAAC,KAAAD,UAAAA,SAGpBa,EAAAX,UAAAC,UAAA,SAAUW,GACN,OAAOb,KAAKD,UAAUY,yBAAyB,OAAOE,EAAG,+BAThER,EAAAA,KAAIC,KAAA,CAAC,CACFC,KAAM,4DAHFC,EAAAA,iCCOJ,SAAAM,EAAoBf,GAAAC,KAAAD,UAAAA,SAGpBe,EAAAb,UAAAC,UAAA,SAAUW,GACN,OAAOb,KAAKD,UAAUgB,uBAAuBF,6BATpDR,EAAAA,KAAIC,KAAA,CAAC,CACFC,KAAM,uDAHFC,EAAAA,sBCSR,iCAJCQ,EAAAA,SAAQV,KAAA,CAAC,CACNW,aAAc,CAACnB,EAAcgB,EAAaL,EAAeG,GACzDM,QAAS,CAACpB,EAAcgB,EAAaL,EAAeG","sourcesContent":["import {Pipe, PipeTransform} from \"@angular/core\";\nimport {DomSanitizer, SafeHtml} from \"@angular/platform-browser\";\n\n@Pipe({\n    name: \"safeHtml\"\n})\nexport class SafeHtmlPipe implements PipeTransform {\n\n    constructor(private sanitizer: DomSanitizer) {\n    }\n\n    transform(key: string): SafeHtml {\n        return this.sanitizer.bypassSecurityTrustHtml(key);\n    }\n}","import {Pipe, PipeTransform} from \"@angular/core\";\nimport {DomSanitizer, SafeStyle} from \"@angular/platform-browser\";\n\n@Pipe({\n    name: \"safeStyle\"\n})\nexport class SafeStylePipe implements PipeTransform {\n\n    constructor(private sanitizer: DomSanitizer) {\n    }\n\n    transform(style: string): SafeStyle {\n        return this.sanitizer.bypassSecurityTrustStyle(style);\n    }\n}\n","import {Pipe, PipeTransform} from \"@angular/core\";\nimport {DomSanitizer, SafeStyle} from \"@angular/platform-browser\";\n\n@Pipe({\n    name: \"safeStyleUrl\"\n})\nexport class SafeStyleUrlPipe implements PipeTransform {\n\n    constructor(private sanitizer: DomSanitizer) {\n    }\n\n    transform(url: string): SafeStyle {\n        return this.sanitizer.bypassSecurityTrustStyle(`url(${url})`);\n    }\n}\n","import {Pipe, PipeTransform} from \"@angular/core\";\nimport {DomSanitizer, SafeUrl} from \"@angular/platform-browser\";\n\n@Pipe({\n    name: \"safeUrl\"\n})\nexport class SafeUrlPipe implements PipeTransform {\n\n    constructor(private sanitizer: DomSanitizer) {\n    }\n\n    transform(url: string): SafeUrl {\n        return this.sanitizer.bypassSecurityTrustUrl(url);\n    }\n}\n","import {NgModule} from \"@angular/core\";\nimport {SafeHtmlPipe} from \"./safe-html-pipe\";\nimport {SafeStylePipe} from \"./safe-style-pipe\";\nimport {SafeStyleUrlPipe} from \"./safe-style-url-pipe\";\nimport {SafeUrlPipe} from \"./safe-url-pipe\";\n\n@NgModule({\n    declarations: [SafeHtmlPipe, SafeUrlPipe, SafeStylePipe, SafeStyleUrlPipe],\n    exports: [SafeHtmlPipe, SafeUrlPipe, SafeStylePipe, SafeStyleUrlPipe]\n})\nexport class DomSanitizerModule {\n}\n"]}