{"version":3,"file":"commons-angular-extensions-browser-match-media.js","sources":["ng://@co.mmons/angular-extensions/browser/match-media/match-media.ts","ng://@co.mmons/angular-extensions/browser/match-media/screen-size.ts","ng://@co.mmons/angular-extensions/browser/match-media/match-width.ts","ng://@co.mmons/angular-extensions/browser/match-media/index.ts","ng://@co.mmons/angular-extensions/browser/match-media/commons-angular-extensions-browser-match-media.ts"],"sourcesContent":["import {Pipe, PipeTransform, Directive, TemplateRef, ViewContainerRef, Input} from \"@angular/core\";\n\n@Pipe({\n    name: \"matchMedia\",\n    pure: false\n})\nexport class MatchMediaPipe implements PipeTransform {\n\n    transform(query: string): boolean {\n\n        if (query != this.query) {\n            this.destroy();\n            this.queryList = window.matchMedia(this.prepareQuery(query));\n        }\n\n        return this.queryList.matches;\n    }\n\n    protected prepareQuery(inputQuery: string) {\n        return inputQuery;\n    }\n\n    private queryList: MediaQueryList;\n\n    private query: string;\n\n    private destroy() {\n        this.queryList = null;\n    }\n\n    ngOnDestroy() {\n        this.destroy;\n    }\n\n}\n\n@Directive({\n    selector: \"[ifMatchMedia]\"\n})\nexport class IfMatchMediaDirective {\n\n    constructor(private template: TemplateRef<any>, private viewContainer: ViewContainerRef) {\n    }\n\n    @Input()\n    set ifMatchMedia(query: string) {\n\n        let matches = window.matchMedia(query).matches;\n\n        if (matches) {\n            this.viewContainer.createEmbeddedView(this.template);\n        } else if (!matches) {\n            this.viewContainer.clear();\n        }\n    }\n}\n","export class ScreenSizeMinWidth {\n    \n    static readonly xs = 0;\n\n    static readonly extraSmall = ScreenSizeMinWidth.xs;\n\n    static readonly sm = 576;\n\n    static readonly small = ScreenSizeMinWidth.sm;\n\n    static readonly md = 768;\n\n    static readonly tablet = ScreenSizeMinWidth.md;\n\n    static readonly medium = ScreenSizeMinWidth.md;\n\n    static readonly lg = 992;\n\n    static readonly large = ScreenSizeMinWidth.lg;\n\n    static readonly desktop = ScreenSizeMinWidth.lg;\n\n    static readonly xl = 1200;\n\n    static readonly extraLarge = ScreenSizeMinWidth.xl;\n\n    static readonly desktopWide = ScreenSizeMinWidth.xl;\n\n}","import {Pipe, PipeTransform, Directive, TemplateRef, ViewContainerRef, Input} from \"@angular/core\";\nimport {ScreenSizeMinWidth} from \"./screen-size\";\nimport {MatchMediaPipe} from \"./match-media\";\n\nfunction buildMediaQuery(comparison: \"lte\" | \"gte\", input: string): string {\n\n    let size: any = input;\n\n    // when predefined size is given\n    if (input.match(/^\\D+$/)) {\n        size = ScreenSizeMinWidth[input];\n\n        if (size === undefined) {\n            throw new Error(\"Cannot find predefined screen size for key \" + input);\n        }\n\n        if (comparison == \"lte\") {\n            size = size - 1;\n        }\n    }\n\n    return `(${comparison == \"gte\" ? \"min-width\" : \"max-width\"}: ${size}px)`;\n}\n\n@Pipe({\n    name: \"matchGreaterWidth\",\n    pure: false\n})\nexport class MatchWidthGreaterPipe extends MatchMediaPipe {\n\n    protected prepareQuery(query: string) {\n        return buildMediaQuery(\"gte\", query);\n    }\n\n}\n\n@Pipe({\n    name: \"matchLesserWidth\",\n    pure: false\n})\nexport class MatchLesserWidthPipe extends MatchMediaPipe {\n\n    protected prepareQuery(query: string) {\n        return buildMediaQuery(\"lte\", query);\n    }\n\n}\n\n@Directive({\n    selector: \"[ifMatchGreaterWidth]\"\n})\nexport class IfMatchGreaterWidthDirective {\n\n    constructor(private template: TemplateRef<any>, private viewContainer: ViewContainerRef) {\n    }\n\n    @Input()\n    set ifMatchGreaterWidth(minWidth: string) {\n\n        let matches = window.matchMedia(buildMediaQuery(\"gte\", minWidth)).matches;\n\n        if (matches) {\n            this.viewContainer.createEmbeddedView(this.template);\n        } else if (!matches) {\n            this.viewContainer.clear();\n        }\n    }\n}\n\n@Directive({\n    selector: \"[ifMatchLesserWidth]\"\n})\nexport class IfMatchLesserWidthDirective {\n\n    constructor(private template: TemplateRef<any>, private viewContainer: ViewContainerRef) {\n    }\n\n    @Input()\n    set ifMatchLesserWidth(maxWidth: string) {\n\n        let matches = window.matchMedia(buildMediaQuery(\"lte\", maxWidth)).matches;\n\n        if (matches) {\n            this.viewContainer.createEmbeddedView(this.template);\n        } else if (!matches) {\n            this.viewContainer.clear();\n        }\n    }\n}","import {NgModule} from \"@angular/core\";\n\nimport {MatchMediaPipe, IfMatchMediaDirective} from \"./match-media\";\nimport {MatchWidthGreaterPipe, MatchLesserWidthPipe, IfMatchGreaterWidthDirective, IfMatchLesserWidthDirective} from \"./match-width\";\n\nexport * from \"./match-media\";\nexport * from \"./match-width\";\n\n@NgModule({\n    declarations: [MatchMediaPipe, IfMatchMediaDirective, MatchWidthGreaterPipe, MatchLesserWidthPipe, IfMatchGreaterWidthDirective, IfMatchLesserWidthDirective],\n    exports: [MatchMediaPipe, IfMatchMediaDirective, MatchWidthGreaterPipe, MatchLesserWidthPipe, IfMatchGreaterWidthDirective, IfMatchLesserWidthDirective]\n})\nexport class MatchMediaModule {\n}","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n"],"names":[],"mappings":"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"}